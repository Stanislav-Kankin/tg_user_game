body, html {
    margin: 0; /* Устанавливает отступ (margin) у body и html равным 0, чтобы убрать все стандартные отступы. */
    padding: 0; /* Устанавливает внутренний отступ (padding) у body и html равным 0, чтобы убрать все стандартные внутренние отступы. */
    width: 100%; /* Устанавливает ширину body и html на 100% относительно родительского элемента, в данном случае это окно браузера. */
    height: 100%; /* Устанавливает высоту body и html на 100% относительно родительского элемента (включая высоту окна браузера). */
    background-image: url('../static/images/bg_star.jpg'); /* Устанавливает фоновое изображение для страницы с относительным путем к изображению. */
    background-size: cover; /* Масштабирует фоновое изображение, чтобы оно полностью покрывало область. Это может привести к обрезке изображения. */
    background-position: center; /* Центрирует фоновое изображение в области просмотра. */
    overflow: hidden; /* Скрывает любые элементы, которые выходят за границы окна просмотра (например, если что-то перемещается за пределы видимой области). */
}

#game-container {
    position: relative; /* Устанавливает элемент с id game-container как контекст для позиционирования абсолютно позиционированных потомков. */
    width: 100%; /* Задает ширину контейнера на 100% относительно ширины родительского элемента (в данном случае body). */
    height: 100%; /* Задает высоту контейнера на 100% относительно высоты родительского элемента. */
}

#rocket {
    position: absolute; /* Позволяет позиционировать ракету относительно ближайшего позиционированного (не статичного) родителя (в данном случае это game-container). */
    bottom: 0; /* Устанавливает расположение ракеты внизу контейнера. */
    left: 50%; /* Устанавливает левый край ракеты на 50% от ширины контейнера (то есть в центре контейнера). */
    transform: translateX(-50%); /* Смещает ракету налево на 50% от ее ширины для точного центрирования. */
    width: 150px; /* Устанавливает фиксированную ширину ракеты в 50 пикселей. */
    height: auto; /* Высота ракеты автоматически подстраивается пропорционально её ширине. */
    cursor: pointer; /* Устанавливает вид курсора в виде руки при наведении, чтобы показать, что элемент кликабельный. */
}

.asteroid {
    position: absolute; /* Позволяет позиционировать астероиды относительно ближайшего позиционированного (не статичного) родителя. */
    top: -50px; /* Устанавливает верхнюю границу астероида за пределами видимости контейнера, позволяя ему начинать движение сверху. */
    width: 50px; /* Устанавливает фиксированную ширину астероидов в 50 пикселей. */
    height: auto; /* Высота астероида автоматически подстраивается пропорционально его ширине. */
}

.message {
    position: absolute; /* Позволяет позиционировать сообщения относительно ближайшего позиционированного (не статичного) родителя. */
    font-size: 20px; /* Устанавливает размер шрифта для текста сообщения в 20 пикселей. */
    font-weight: bold; /* Устанавливает текст сообщения жирным шрифтом. */
    transition: opacity 1s ease-out; /* Задает плавный переход для изменения прозрачности (opacity) элемента в течение 1 секунды с эффектом ease-out (быстро в начале, медленно в конце). */
}
